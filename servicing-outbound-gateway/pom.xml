<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.worldpay.servicing</groupId>
    <artifactId>servicing-root</artifactId>
    <version>5.0.22-SNAPSHOT</version>
  </parent>

  <artifactId>servicing-outbound-gateway</artifactId>
  <packaging>jar</packaging>
  <name>Servicing Outbound Gateway</name>
  <description>Outbound Servicing Connections</description>

  <properties>
    <coverage.exclusions>
      **/com/worldpay/servicing/gateway/outbound/model/approveservice/*,
      **/com/worldpay/servicing/gateway/outbound/model/partyhierarchy/*
    </coverage.exclusions>
    <sonar.exclusions>
      ${coverage.exclusions}
    </sonar.exclusions>
    <sonar.coverage.exclusions>
      ${coverage.exclusions}
    </sonar.coverage.exclusions>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.worldpay.servicing</groupId>
      <artifactId>servicing-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.worldpay.servicing</groupId>
      <artifactId>servicing-model</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web-services</artifactId>
    </dependency>
    <dependency>
      <groupId> org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId> org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <exclusions>
        <exclusion>
          <groupId>commons-codec</groupId>
          <artifactId>commons-codec</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <!-- javasimon -->
    <dependency>
      <groupId>org.javasimon</groupId>
      <artifactId>javasimon-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-xml</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.ws</groupId>
      <artifactId>spring-ws-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- TPG dependencies -->
    <dependency>
      <groupId>com.worldpay.tpg</groupId>
      <artifactId>tpg-common</artifactId>
    </dependency>
    <dependency>
      <groupId>com.worldpay.tpg</groupId>
      <artifactId>tpg-logging</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jaxb2-maven-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>generate-siebel-approval-client</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/main/java</outputDirectory>
              <packageName>com.worldpay.servicing.gateway.outbound.model.approveservice</packageName>
              <wsdl>true</wsdl>
              <xmlschema>false</xmlschema>
              <sourceType>wsdl</sourceType>
              <sources>
                <source>src/main/resources/wsclient/siebelApproval.wsdl</source>
              </sources>
              <schemaFiles>siebelApproval.wsdl</schemaFiles>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
          <execution>
            <id>generate-siebel-party-hierarchy-client</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>xjc</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.basedir}/src/main/java</outputDirectory>
              <packageName>com.worldpay.servicing.gateway.outbound.model.partyhierarchy</packageName>
              <wsdl>true</wsdl>
              <xmlschema>false</xmlschema>
              <sourceType>wsdl</sourceType>
              <sources>
                <source>src/main/resources/wsclient/partyHierarchy.wsdl</source>
              </sources>
              <schemaFiles>partyHierarchy.wsdl</schemaFiles>
              <clearOutputDir>false</clearOutputDir>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <ignoredUnusedDeclaredDependencies>
            <ignoredUnusedDeclaredDependency>
              org.springframework.boot:spring-boot-starter-web-services
            </ignoredUnusedDeclaredDependency>
          </ignoredUnusedDeclaredDependencies>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>jacoco-coverage-app</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>jacoco-coverage-report</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- Don't instrument these classes. The Jacoco code coverage report
                  won't include these classes. -->
                <exclude>${coverage.exclusions}</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <configuration>
              <excludes>
                <!-- Don't instrument these classes in the report for the Sonar job.
                  These classes still need to be added in the sonar.coverage.exclusions property
                  in order for the Sonar report to ignore them. If they are not added to the
                  sonar.coverage.exclusions property then they'll show up with 0% code coverage
                  even if some lines/conditions are covered. -->
                <exclude>${coverage.exclusions}</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </reporting>
    </profile>
  </profiles>

</project>
